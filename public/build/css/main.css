@import url(https://fonts.googleapis.com/css?family=Yanone+Kaffeesatz:200);/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */

html {
  font-family: sans-serif;
  line-height: 1.15;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

article,
aside,
footer,
header,
nav,
section {
  display: block;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

figcaption,
figure,
main {
  display: block;
}

figure {
  margin: 1em 40px;
}

hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible;
}

pre {
  font-family: monospace, monospace;
  font-size: 1em;
}

a {
  background-color: transparent;
  -webkit-text-decoration-skip: objects;
}

a:active,
a:hover {
  outline-width: 0;
}

abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  text-decoration: underline dotted;
}

b,
strong {
  font-weight: inherit;
}

b,
strong {
  font-weight: bolder;
}

code,
kbd,
samp {
  font-family: monospace, monospace;
  font-size: 1em;
}

dfn {
  font-style: italic;
}

mark {
  background-color: #ff0;
  color: #000;
}

small {
  font-size: 80%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

audio,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

img {
  border-style: none;
}

svg:not(:root) {
  overflow: hidden;
}

button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  font-size: 100%;
  line-height: 1.15;
  margin: 0;
}

button,
input {
  overflow: visible;
}

button,
select {
  text-transform: none;
}

button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
}

button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0;
}

button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal;
}

progress {
  display: inline-block;
  vertical-align: baseline;
}

textarea {
  overflow: auto;
}

[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit;
}

details,
menu {
  display: block;
}

summary {
  display: list-item;
}

canvas {
  display: inline-block;
}

template {
  display: none;
}

[hidden] {
  display: none;
}

html {
  box-sizing: border-box;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  font-size: 16px;
  color: #212529;
  font-family: 'Lora', 'Times New Roman', serif;
}

p {
  line-height: 1.5;
  margin: 30px 0;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 800;
  font-family: "Yanone Kaffeesatz",sans-serif;
}

a {
  color: #009688;
  -webkit-transition: all 0.2s;
  -moz-transition: all 0.2s;
  transition: all 0.2s;
  text-decoration: none;
}

blockquote {
  font-style: italic;
  color: #868e96;
}

.brand {
  font-family: "Yanone Kaffeesatz",sans-serif;
}

.content:after {
  content: "";
  display: table;
  clear: both;
  box-sizing: inherit;
}

.bg-brand-color {
  background-color: #009688;
}

.brand-color {
  color: #009688 !important;
}

.bg-brand-color-alt {
  background-color: #ee6e73;
}

.brand-color-alt {
  color: #ee6e73;
}

.bg-brand-color.bg-transition {
  -webkit-transition: background-color 500ms linear;
  -ms-transition: background-color 500ms linear;
  transition: background-color 500ms linear;
}

.bg-brand-color.bg-transition:hover {
  background-color: #ee6e73;
}

.text-code {
  font-family: "Courier New","DejaVu Sans Mono","Bitstream Vera Sans Mono","Monaco",monospace !important;
}

body {
  color: #222;
  font: normal 100%/1.4 "Open Sans","Helvetica Neue Light","Helvetica Neue","Helvetica","Arial",sans-serif;
}

.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

.container {
  max-width: 1180px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 20px;
  padding-right: 20px;
  width: 100%;
}

.hide-text {
  overflow: hidden;
  padding: 0;
  text-indent: 101%;
  white-space: nowrap;
}

.visually-hidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

header.masthead {
  margin-bottom: 50px;
  background: no-repeat center center;
  background-color: #868e96;
  background-size: cover;
  background-attachment: scroll;
  position: relative;
}

header.masthead .overlay {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  background-color: #212529;
  opacity: 0.5;
}

header.masthead .page-heading,
header.masthead .post-heading,
header.masthead .site-heading {
  position: relative;
  z-index: 2;
  padding: 200px 0 150px;
  color: #FFFFFF;
}

@media only screen and (min-width: 768px) {
  header.masthead .page-heading,
  header.masthead .post-heading,
  header.masthead .site-heading {
    padding: 200px 0;
  }
}

header.masthead .page-heading,
header.masthead .site-heading {
  text-align: center;
}

header.masthead .page-heading h1,
header.masthead .site-heading h1 {
  font-size: 50px;
  margin-top: 0;
}

header.masthead .page-heading .subheading,
header.masthead .site-heading .subheading {
  font-size: 24px;
  font-weight: 300;
  line-height: 1.1;
  display: block;
  margin: 10px 0 0;
}

@media only screen and (min-width: 768px) {
  header.masthead .page-heading h1,
  header.masthead .site-heading h1 {
    font-size: 80px;
  }
}

header.masthead .post-heading h1 {
  font-size: 35px;
}

header.masthead .post-heading .meta,
header.masthead .post-heading .subheading {
  line-height: 1.1;
  display: block;
}

header.masthead .post-heading .subheading {
  font-size: 24px;
  font-weight: 600;
  margin: 10px 0 30px;
}

header.masthead .post-heading .meta {
  font-size: 20px;
  font-weight: 300;
  font-style: italic;
}

header.masthead .post-heading .meta a {
  color: #FFFFFF;
}

@media only screen and (min-width: 768px) {
  header.masthead .post-heading h1 {
    font-size: 55px;
  }

  header.masthead .post-heading .subheading {
    font-size: 30px;
  }
}

.list-inline-item {
  display: inline-block;
  margin: 0 10px;
}

#footer-social {
  margin-top: 5rem;
}

.legal {
  text-align: center;
}

.legal a {
  display: inline-block;
  margin: 0 10px;
}

footer {
  padding-left: 17%;
}

footer a {
  color: #ededed;
  -webkit-transition: color 1s ease-in-out;
  -moz-transition: color 1s ease-in-out;
  -o-transition: color 1s ease-in-out;
  transition: color 1s ease-in-out;
}

footer a:hover {
  color: #ee6e73 !important;
}

aside#aboutme {
  border: 1px solid #ededed;
}

aside#aboutme .content {
  padding: 10px;
}

aside#aboutme .content p {
  margin: 2px 0;
}

#navbar {
  position: absolute;
  border-bottom: 1px solid #e9ecef;
  background: transparent;
  z-index: 99;
}

#navbar .navbar-brand {
  font-weight: 800;
  color: #343a40;
}

#navbar .navbar-toggler {
  font-size: 12px;
  font-weight: 800;
  padding: 13px;
  text-transform: uppercase;
  color: #343a40;
}

#navbar .navbar-nav>li.nav-item>a {
  font-size: 12px;
  font-weight: 800;
  letter-spacing: 1px;
  text-transform: uppercase;
}

@media only screen and (min-width: 992px) {
  #navbar {
    border-bottom: 1px solid transparent;
    background: transparent;
  }

  #navbar .navbar-brand {
    padding: 10px 20px;
    color: #FFFFFF;
  }

  #navbar .navbar-brand:focus,
  #navbar .navbar-brand:hover {
    color: rgba(255,255,255,0.8);
  }

  #navbar .navbar-nav>li.nav-item>a {
    padding: 10px 20px;
    color: #FFFFFF;
  }

  #navbar .navbar-nav>li.nav-item>a:focus,
  #navbar .navbar-nav>li.nav-item>a:hover {
    color: rgba(255,255,255,0.8);
  }
}

@media only screen and (min-width: 992px) {
  #navbar {
    -webkit-transition: background-color 0.2s;
    -moz-transition: background-color 0.2s;
    transition: background-color 0.2s;
    -webkit-transform: translate3d(0, 0, 0);
    -moz-transform: translate3d(0, 0, 0);
    -ms-transform: translate3d(0, 0, 0);
    -o-transform: translate3d(0, 0, 0);
    transform: translate3d(0, 0, 0);
    -webkit-backface-visibility: hidden;
  }

  #navbar.is-fixed {
    position: fixed;
    top: -67px;
    -webkit-transition: -webkit-transform 0.2s;
    -moz-transition: -moz-transform 0.2s;
    transition: transform 0.2s;
    border-bottom: 1px solid #fff;
    background-color: rgba(255,255,255,0.9);
  }

  #navbar.is-fixed .navbar-brand {
    color: #212529;
  }

  #navbar.is-fixed .navbar-brand:focus,
  #navbar.is-fixed .navbar-brand:hover {
    color: #009688;
  }

  #navbar.is-fixed .navbar-nav>li.nav-item>a {
    color: #212529;
  }

  #navbar.is-fixed .navbar-nav>li.nav-item>a:focus,
  #navbar.is-fixed .navbar-nav>li.nav-item>a:hover {
    color: #009688;
  }

  #navbar.is-visible {
    -webkit-transform: translate3d(0, 100%, 0);
    -moz-transform: translate3d(0, 100%, 0);
    -ms-transform: translate3d(0, 100%, 0);
    -o-transform: translate3d(0, 100%, 0);
    transform: translate3d(0, 100%, 0);
  }
}


/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/