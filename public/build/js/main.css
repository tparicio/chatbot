
.center[data-v-0dd47e10] {
  text-align: center;
}
body[data-v-0dd47e10],html[data-v-0dd47e10]{
  height: 100%;
  margin: 0;
  background: #7F7FD5;
  background: -webkit-linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);
  background: linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);
}
.contacts li[data-v-0dd47e10]{
  width: 100% !important;
  padding: 5px 10px;
  margin-bottom: 15px !important;
}
.user_info span[data-v-0dd47e10]{
  font-size: 20px;
  color: white;
}
.user_info p[data-v-0dd47e10]{
  font-size: 10px;
  color: rgba(255,255,255,0.6);
  text-align: left;
}

.avatar.big[data-v-6b3d8cbe] {
  width : 68px;
  height: 68px;
  border: 3px solid #CCCCCC;
}
.send_btn[data-v-6b3d8cbe]{
  border-radius: 0 15px 15px 0 !important;
  background-color: rgba(0,0,0,0.3) !important;
  border:0 !important;
  color: white !important;
  cursor: pointer;
  height: 100%;
  text-decoration: none;
}
.force_btn[data-v-6b3d8cbe]{
  border-radius: 15px 0 0 15px !important;
  background-color: rgba(0,0,0,0.3) !important;
  border:0 !important;
  color: white !important;
  cursor: pointer;
  height: 100%;
  text-decoration: none;
}
body[data-v-6b3d8cbe],html[data-v-6b3d8cbe]{
  height: 100%;
  margin: 0;
  background: #7F7FD5;
  background: -webkit-linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);
  background: linear-gradient(to right, #91EAE4, #86A8E7, #7F7FD5);
}
.card[data-v-6b3d8cbe]{
  height: 500px;
  border-radius: 15px !important;
  background-color: rgba(0,0,0,0.4) !important;
}
.msg_card_body[data-v-6b3d8cbe]{
  overflow-y: auto;
  padding: 2rem 2rem 0 2rem;
  scroll-behavior: smooth;
}
.card-header[data-v-6b3d8cbe]{
  border-radius: 15px 15px 0 0 !important;
  border-bottom: 0 !important;
}
.card-footer[data-v-6b3d8cbe]{
  border-radius: 0 0 15px 15px !important;
  border-top: 0 !important;
}
.type_msg[data-v-6b3d8cbe]{
  background-color: rgba(0,0,0,0.3) !important;
  border:0 !important;
  color:white !important;
  height: 60px !important;
  overflow-y: auto;
}
.type_msg[data-v-6b3d8cbe]:focus{
  box-shadow:none !important;
  outline:0px !important;
}
.contacts li[data-v-6b3d8cbe]{
  width: 100% !important;
  padding: 5px 10px;
  margin-bottom: 15px !important;
}
.avatar[data-v-6b3d8cbe]{
  height: 40px;
  width: 40px;
  border:1px solid #CCCCCC;
}
.img_cont[data-v-6b3d8cbe]{
  position: relative;
  height: 70px;
  width: 70px;
}
.online_icon[data-v-6b3d8cbe]{
  position: absolute;
  height: 15px;
  width:15px;
  background-color: #4cd137;
  border-radius: 50%;
  bottom: 0.2em;
  right: 0.4em;
  border:1px solid white;
}
.user_info[data-v-6b3d8cbe]{
  margin-top: auto;
  margin-bottom: auto;
  margin-left: 15px;
}
.user_info span[data-v-6b3d8cbe]{
  font-size: 20px;
  color: white;
}
.user_info p[data-v-6b3d8cbe] {
  font-size: 10px;
  color: rgba(255,255,255,0.6);
  text-align: left;
}
.msg_head[data-v-6b3d8cbe]{
  position: relative;
}
.chars-counter[data-v-6b3d8cbe] {
  text-align: left;
  margin-left: 42px;
  color: white;
  font-size: 10px;
}

.avatar{
  height: 40px;
  width: 40px;
  border:1px solid #CCCCCC;
  background: #DDDDDD;
}
.img_cont_msg{
  height: 40px;
  width: 40px;
}
.user_info span{
  font-size: 20px;
  color: white;
}
.user_info p {
  font-size: 10px;
  color: rgba(255,255,255,0.6);
  text-align: left;
}
.msg_container {
  margin-top: auto;
  margin-bottom: auto;
  margin-left: 10px;
  border-radius: 10px;
  background-color: #82ccdd;
  padding: 10px;
  position: relative;
  min-width: 150px;
  text-align: left;
}
.msg_container.yoda {
  margin-right: 10px;
  background-color: #78e08f;
}
.msg_time {
  position: absolute;
  left: 10px;
  right: unset;
  bottom: -17px;
  color: white;
  font-size: 12px;
  font-style: italic;
}
.msg_container.yoda .msg_time {
  left: unset;
  right: 10px;
}

.avatar{
  height: 40px;
  width: 40px;
  border:1px solid #CCCCCC;
  background: #DDDDDD;
}
.message_alerts .writing .msg_container{
  margin-top: auto;
  margin-bottom: auto;
  margin-left: 10px;
  border-radius: 10px;
  background-color: #78e08f;
  padding: 10px;
  position: relative;
  min-width: 150px;
  text-align: left;
  opacity: 0.5;
}
.message_alerts .error .msg_container {
  background-color: #dc3545;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/